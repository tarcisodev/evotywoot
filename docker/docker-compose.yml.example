version: '3.3'

volumes:
  db-data:
  evolution-instances:
  pgadmin_data:
  evolution_redis:
  chatwoot_storage:

networks:
  typebot-network:
    driver: bridge

services:
  # region Chatwoot
  chatwoot: &chatwoot
    image: chatwoot/chatwoot:latest
    env_file: ../chatwoot/.env
    volumes:
      - chatwoot_storage:/data/chatwoot_storage
    networks:
      - typebot-network
      
  rails:
    <<: *chatwoot
    depends_on:
      - typebot-db
      - redis
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    networks:
      - typebot-network
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always
    
  sidekiq:
    <<: *chatwoot
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    networks:
      - typebot-network
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always
  # endregion

  # Banco de Dados PostgreSQL para o Typebot
  typebot-db:
    image: postgres:16
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=typebot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=typebot
    networks:
      - typebot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PgAdmin para gerenciar o banco de dados PostgreSQL do Evolution API
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=contato@tarciso.dev
      - PGADMIN_DEFAULT_PASSWORD=123456
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 4001:80 # Alterado para evitar conflito
    networks:
      - typebot-network

  # Builder do Typebot
  typebot-builder:
    image: baptistearno/typebot-builder:latest
    restart: always
    depends_on:
      typebot-db:
        condition: service_healthy
    ports:
      - '8081:3000' # Porta ajustada para evitar conflitos
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file: ../typebot/.env
    networks:
      - typebot-network

  # Viewer do Typebot
  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    depends_on:
      typebot-db:
        condition: service_healthy
    restart: always
    ports:
      - '8082:3000'
    env_file: ../typebot/.env
    networks:
      - typebot-network
  
  # Evolution API
  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "8080:8080" # Porta padrÃ£o 8080
    env_file:
      - ../evolution/.env
    volumes:
      - evolution-instances:/evolution/instances
    networks:
      - typebot-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # Evolution Redis
  redis:
    image: redis:latest
    networks:
      - typebot-network
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6379:6379
